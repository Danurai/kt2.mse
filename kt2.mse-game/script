faction_tags := [
  "Space Marines": "Space Marine, Imperium, Adeptus Astartes, \<chapter>"
  "Craftworlds": "Craftworld, Aeldari, Asuryani, \<craftworld>"
  "Harlequins": "Troupe, Aeldari, Harlequins, \<troupe>"
]

get_tags := {

  ftags := to_upper(faction_tags[ card.killteam ])
  add_leader := if card.leader == "yes" and not contains(card.fireteamop, match: "Leader") then ", LEADER, " else ", "
  if card.chapter != "" then ftags := replace( match: "\<\\w+>", replace: to_upper(card.chapter), ftags )
  replace( match: "^(.+?)\\," replace: "<color:rgb(222,86,39)>\\1</color><sym>S</sym>,", ftags )
    + add_leader
    + replace(match: "(.+)\\s\\((.+)\\)", replace: "\\1, \\2", to_upper(card.fireteamop) )
}

# Weapon table arrangement

wpn_cell_font_size := 11
wpn_cell_height := 20

wpn_type_list := {
  [card.w1type,card.w2type,card.w3type,card.w4type,card.w5type,card.w6type,card.w7type,card.w8type,card.w9type,card.w10type,card.w11type,card.w12type,card.w13type,card.w14type,card.w15type,card.w16type,card.w17type,card.w18type,card.w19type,card.w20type][input]
}
wpn_name_list := {
  [card.w1name,card.w2name,card.w3name,card.w4name,card.w5name,card.w6name,card.w7name,card.w8name,card.w9name,card.w10name,card.w11name,card.w12name,card.w13name,card.w14name,card.w15name,card.w16name,card.w17name,card.w18name,card.w19name,card.w20name][input]
}
wpn_name_widths := {
  [card_style.w1name.content_width,card_style.w2name.content_width,card_style.w3name.content_width,card_style.w4name.content_width,card_style.w5name.content_width,card_style.w6name.content_width,card_style.w7name.content_width,card_style.w8name.content_width,card_style.w9name.content_width,card_style.w10name.content_width,card_style.w11name.content_width,card_style.w12name.content_width,card_style.w13name.content_width,card_style.w14name.content_width,card_style.w15name.content_width,card_style.w16name.content_width,card_style.w17name.content_width,card_style.w18name.content_width,card_style.w19name.content_width,card_style.w20name.content_width][input]
}

wts_index_list := {
  for each k:v in break_text(card.wpntblshow, match:"\\d\\d") do [ to_int(v)]
}
wpn_tn_visible := {
  padded_n := "0" + to_string(input + 1)
  slot := "Slot " + substring(padded_n, begin: length(padded_n) - 2)
  contains(card.wpntblshow, match: slot)
}
wpn_cell_visible := {
  hasammo := wpn_type_list(input) == "Ranged Ammo"
  hasname := wpn_name_list(input) != ""
  is_selected := wpn_tn_visible(input)
  hasname and is_selected and not hasammo
}
wpn_info_visible := {
  wpnvisible := wpn_tn_visible(input)
  hasammo := wpn_type_list(input) == "Ranged Ammo"
  hasammo and wpnvisible
}
wpn_stripe_visible := {
  contains(card.wpntblstripes, match: input) and length(split_text(match: ", ", card.wpntblshow)) >= input
}

rank_name := {
  if      input == "-" then ""
  else if input == "51+" then "revered"
  else if input < 6  then "adept"
  else if input < 16 then "veteran"
  else if input < 31 then "ace"
  else if input < 51 then "grizzled"
  else                    ""
}

xp_image := {
  if      input == "-" then ""
  else if input == "51+" then "/kt2-common.mse-include/revered.png"
  else if input < 6  then "/kt2-common.mse-include/adept.png"
  else if input < 16 then "/kt2-common.mse-include/veteran.png"
  else if input < 31 then "/kt2-common.mse-include/ace.png"
  else if input < 51 then "/kt2-common.mse-include/grizzled.png"
  else                    ""
}
specialism_image := {
  path := "/kt2-common.mse-include/resource/"
  mask := path + input + "_mask.png"
  
  if card["skill_" + input ] == "no"                    then clr := path + "white.png"
  else if match(card.specialism, match: "(?i)" + input) then clr := path + "orange.png" 
  else                                                       clr := path + "black.png"
  set_mask(image: clr mask: mask)
}